{"version":3,"sources":["Login/Login.js","Register/Register.js","Genre/Item/Item.js","Genre/Genre.js","Genre/BuyBook/BuyBook.js","Analytics/Analytics.js","Browse/Browse.js","App.js","reportWebVitals.js","index.js"],"names":["login","props","console","log","className","type","onChange","changeuser","changepass","to","onClick","click","Register","state","username","password","confirmPassword","error","exception","usernameChangeHandler","event","setState","target","value","passwordChangeHandler","confirmPasswordChangeHandler","clearPassword","submitRequestHandler","tf","body","axios","post","then","response","submitted","catch","err","this","style","fontStyle","color","todo","regButton","Component","item","backgroundColor","border","borderRadius","marginLeft","marginRight","marginBottom","marginTop","padding","boxShadow","alt","src","image","fontFamily","title","author","price","toFixed","Genre","getSubject","sub","getSubjectLowerCase","reviewValue","book","undefined","reviews","map","review","textDecorationLine","reviewText","rating","searchBook","search","toLowerCase","newBooks","allBooks","includes","push","books","url","isFetching","get","data","bookId","Item","BuyBook","updateBookOnMount","getHash","bookView","updateBook","toggleReview","user","authenticated","addReview","location","hash","substring","incrementQuantity","inc","quantity","decrementQuantity","changeReviewText","changeRating","submitReview","headers","token","getReviews","forEach","genre","id","revs","width","textAlign","min","max","height","loginMessage","atc","Analytics","userTotalSpent","userTotalSpentOnBooks","salesIntervalId","viewsIntervalId","monthlyStats","topSales","topViews","componentDidMount","getUserTotalSpent","getUserTotalSpentOnBooks","getMonthlyStats","getTopViews","startTopViewsListener","getTopSales","startTopSalesListener","componentWillUnmount","stopTopSalesListener","stopTopViewsListener","setInterval","clearInterval","userSpent","itemsBought","postalCode","spent","userSpentOnBooks","monthlyBooks","bookSold","month","userViews","booksSold","Browse","subjects","analytics","role","partnerLink","href","App","cart","authuser","tokenExpires","logout","localStorage","removeItem","authorization","expires","setItem","JSON","stringify","addToCart","i","newCart","pos","length","jsonString","getItem","parse","today","Date","dates","split","tdate","parseInt","getFullYear","getMonth","getDate","loginComponent","Login","registerComponent","logoutLink","loginLink","margin","registerLink","path","render","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0b39f77.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\n//the login form, values stored in the app state\r\nconst login = props => {\r\n    console.log(props);\r\n        return (\r\n            <div className='Login'>\r\n                <h2>Login</h2>\r\n                <label>Username</label><input type='text' onChange={props.changeuser} /><br></br>\r\n                <label>Password</label><input type='password' onChange={props.changepass} /><br></br>\r\n                <Link to=\"/\"><button type='submit' onClick={props.click}>Login</button></Link>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default login;","import React, { Component } from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nclass Register extends Component {\r\n\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        error: false,\r\n        exception:false\r\n    }\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    //the next 4 methods all take input from their respective fields and set it to the value\r\n    //in the state\r\nusernameChangeHandler = (event) => {\r\n        \r\n        this.setState({\r\n            username: event.target.value,\r\n            exception:false\r\n            }\r\n        );\r\n        \r\n}\r\n\r\npasswordChangeHandler = (event) => {\r\n    this.setState({\r\n        password: event.target.value\r\n        }\r\n    );\r\n    \r\n}\r\n\r\nconfirmPasswordChangeHandler = (event) => {\r\n    this.setState({\r\n        confirmPassword: event.target.value\r\n        }\r\n    );\r\n}\r\n\r\nclearPassword = () => {\r\n    this.setState({\r\n        password: null,\r\n        confirmPassword: null\r\n        }\r\n    );\r\n}\r\n\r\n//this is the register request method, executes when the register button is clicked\r\nsubmitRequestHandler = () => {\r\n    console.log('clicked register');\r\n    console.log(this.state);\r\n    const pw = this.state.password;\r\n    const confpw = this.state.confirmPassword;\r\n    //check if the password and confirmed password are the same,\r\n    //if different set the value of error (in state) to true. and end method before http request\r\n    const tf = pw === confpw\r\n    console.log('tf');\r\n    console.log(tf);\r\n    if(!tf) {\r\n        this.setState({error: true, submitted:true});\r\n        return;\r\n    }\r\n    //if input is ok, send register request to backend\r\n    const body = {\r\n        username: this.state.username,\r\n        password: this.state.password\r\n    }\r\n    if(tf){\r\n        axios.post('http://localhost:8080/register',body\r\n        ).then(\r\n            response => {\r\n                this.clearPassword();\r\n                this.setState({error: false, submitted:true});\r\n                console.log(response);\r\n            }\r\n        ).catch(\r\n            (err)=>{\r\n                console.log(err);\r\n            }\r\n        );\r\n        ;\r\n    }\r\n\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n    render(){\r\n        console.log('Rendered state:');\r\n        console.log(this.state.error);\r\n        //check if there was an error in the login request, if there was then show <p> that says the passwords dont match\r\n        const error = (\r\n            <small style={{fontStyle: \"italic\", color:\"red\"}}>Passwords must match</small>\r\n        );\r\n        // const exception = (\r\n        //     <small style={{fontStyle: \"italic\", color:\"red\"}}>Username already in use</small>\r\n        // );\r\n        let todo = null;\r\n\r\n        let regButton = (<Link to=\"/login\"><button type='submit' onClick={this.submitRequestHandler}>Register</button></Link>);\r\n        if(this.state.password !== this.state.confirmPassword){\r\n            regButton = (<button type='submit' onClick={this.submitRequestHandler}>Register</button>);\r\n        }\r\n        if(this.state.error){\r\n            todo = error;\r\n        }\r\n\r\n        return (\r\n            <div className='Register'>\r\n                <h2>Register</h2>\r\n                <label>Username:</label><input type='text' onChange={this.usernameChangeHandler} /><br></br>\r\n                <label>Password:</label><input type='password' onChange={this.passwordChangeHandler} /><br></br>\r\n                <label>Confirm Password:</label><input type='password' onChange={this.confirmPasswordChangeHandler} /><br></br>\r\n                {regButton}<br></br>\r\n                {todo}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","import React from \"react\";\r\n\r\n//this component just renders the value for a book so it can\r\n//show the book in the Genre component\r\nconst item = props => {\r\n    return(\r\n        <div className=\"Item\" style={{\r\n            backgroundColor:\"#fff8dc\",\r\n            border: \"2px solid black\",\r\n            borderRadius: \"3%\",\r\n            marginLeft: \"20%\",\r\n            marginRight: \"20%\",\r\n            marginBottom: \"1%\",\r\n            marginTop: \"1%\",\r\n            padding:\"1%\",\r\n            boxShadow: \"10px 10px grey\"\r\n            }}>\r\n                <img alt=\"\" src={props.item.image} style={{\r\n            borderRadius: \"10%\",\r\n            boxShadow: \"3px 3px grey\"}}></img>\r\n                <br></br>\r\n        <div\r\n        style={{\r\n            border: \"2px solid black\",\r\n            borderRadius: \"15%\",\r\n            marginLeft: \"20%\",\r\n            marginRight: \"20%\",\r\n            marginBottom: \"1%\",\r\n            marginTop: \"1%\",\r\n            padding:\"1%\",\r\n            fontFamily:\"cursive\",\r\n            backgroundColor:\"white\"\r\n            }}> <div>{props.item.title}</div><br></br>\r\n            <div><small>by: {props.item.author} </small></div><br></br>\r\n        <div><label>Price:</label> ${props.item.price.toFixed(2)} </div>\r\n        </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default item;","import { React, Component} from 'react';\r\nimport axios from 'axios';\r\nimport {Route, Link} from 'react-router-dom';\r\nimport Item from './Item/Item';\r\n\r\nclass Genre extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        //books, and allBooks is defined. books is the books shown on the screen\r\n        //while allBooks is all the books from the initial api call\r\n        //having both these state values is important for the searching\r\n        this.state = {\r\n            books:[],\r\n            allBooks: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        let url = null;\r\n\r\n        //determine the url depending on whether the user is searching for\r\n        //a book or browsing a category\r\n        if(this.getSubjectLowerCase() != \"search\"){\r\n            //for category\r\n        url = 'http://localhost:8080/getByGenre?genre='+ this.getSubjectLowerCase();\r\n        }\r\n        else{\r\n            //for search\r\n            url = 'http://localhost:8080/getAllBooks';\r\n        }\r\n        this.setState(\r\n            {\r\n                isFetching:true\r\n            });\r\n        axios.get(url)\r\n        .then(\r\n        response => {\r\n            this.setState(\r\n                {\r\n                    books: response.data,\r\n                    allBooks: response.data\r\n                }\r\n            );\r\n        }\r\n        );\r\n\r\n        this.setState(\r\n            {\r\n                isFetching:false\r\n            });\r\n    }\r\n\r\n\r\n    //what is the subject passed through props in the component?\r\n    //used for the header in the render method\r\n    getSubject = ()=>{\r\n        \r\n        if(this.props.sub == \"history\"){\r\n            return \"History\";\r\n        }\r\n        if(this.props.sub == \"science\"){\r\n            return \"Science\";\r\n        }\r\n\r\n        if(this.props.sub == \"fiction\"){\r\n            return \"Fiction\";\r\n        }\r\n\r\n        return \"Search\";\r\n        \r\n        \r\n    }\r\n\r\n    //same as function above but returns lowerCase for the api call\r\n    getSubjectLowerCase = ()=>{\r\n        \r\n        if(this.props.sub == \"history\"){\r\n            return \"history\";\r\n        }\r\n        if(this.props.sub == \"science\"){\r\n            return \"science\";\r\n        }\r\n\r\n        if(this.props.sub == \"fiction\"){\r\n            return \"fiction\";\r\n        }\r\n\r\n        return \"search\"\r\n        \r\n    }\r\n\r\n    //check if reviews are undefined, if not return the div with all\r\n    //the reviews listed for the book\r\n    reviewValue = (book)=>{\r\n        if (book.reviews[0] === undefined) return null;\r\n        let todo = null;\r\n\r\n           todo = book.reviews.map(review => \r\n                (\r\n                    <div style={{\r\n                        border: \"2px solid grey\",\r\n                        marginLeft: \"20%\",\r\n                        marginRight: \"20%\",\r\n                        marginBottom: \"1%\",\r\n                        marginTop: \"1%\"\r\n                        }}>\r\n                        <label style={{\r\n                            textDecorationLine:'underline'\r\n                            }}>Review</label>\r\n                    <p>Review: {review.reviewText}</p>\r\n                    <p>Rating: {review.rating}/5</p>\r\n                    </div>\r\n                )\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                {todo}\r\n                </div>\r\n            );\r\n    }\r\n\r\n    //searches for book\r\n    searchBook = (event) => {\r\n        let search = event.target.value.toLowerCase();\r\n        let newBooks = [];\r\n        this.state.allBooks.map(\r\n            book => {\r\n                if(book.title.toLowerCase().includes(search)) newBooks.push(book);\r\n            }\r\n        )\r\n        this.setState({\r\n            books: newBooks\r\n        });\r\n    }\r\n\r\n    render(){\r\n\r\n\r\n        //defining the search input\r\n        let search = null;\r\n            search = (\r\n                <div>\r\n                    <label>Search Title:</label><input onChange={this.searchBook} type=\"text\"/>\r\n                </div>\r\n            );\r\n\r\n            //defines what books to list, uses Item component to list them\r\n        let todo = null;\r\n        if(this.state.books != null){\r\n           todo = this.state.books.map(book =>\r\n                (\r\n                <Link to={\"book#\" + book.bookId}>\r\n                    <Item item={book} reviews={this.reviewValue(book)}/>\r\n                </Link>\r\n                )\r\n        );\r\n            \r\n        }\r\n        \r\n    return (\r\n        <div className=\"Genre\">\r\n            <h3>{this.getSubject()} Books</h3>\r\n            {search}\r\n            {\r\n                todo\r\n            }\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Genre;\r\n\r\n\r\n","import { React, Component} from 'react';\r\nimport axios from 'axios';\r\n\r\n//come to this component after clicking on the item from one of the Genre components\r\nclass BuyBook extends Component {\r\n//initialize the props and the state\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            user: null,\r\n            book:{\r\n                title:null,\r\n                author:null,\r\n                genre:null,\r\n                price:0,\r\n                bookId:null,\r\n                reviews: [{\r\n                    id: 0,\r\n                    rating: 0,\r\n                    reviewText: null,\r\n                    user:{\r\n                        username: null\r\n                    }\r\n                }],\r\n                image: null\r\n            },\r\n            quantity: 0,\r\n            addReview: false,\r\n            review: {\r\n                rating: 5,\r\n                reviewText: null\r\n            }\r\n        }\r\n\r\n        \r\n    }\r\n//sets the book value of the state after the initial render\r\n    componentDidMount(){\r\n        this.setState(\r\n            {user: this.props.user}\r\n        );\r\n        this.updateBookOnMount();\r\n        console.log(this.props);\r\n    }\r\n    //this one is only called innitially after the page loads so it can\r\n    //get the vallue for the book from the database and also\r\n    //add a view for this book in the database, and wouldn't re add after\r\n    //the addition of a review\r\n    updateBookOnMount = () => {\r\n        axios.get('http://localhost:8080/getBookById?id=' + this.getHash()).then(\r\n            (response) => {\r\n                console.log(response.data);\r\n                this.setState({\r\n                    book: response.data\r\n                }) ;\r\n                this.bookView();   \r\n            }\r\n        );\r\n    }\r\n\r\n    //similar to the function above but it doesn't add a view when loading the\r\n    //book from the database, used after a review is added\r\n    updateBook = () => {\r\n        axios.get('http://localhost:8080/getBookById?id=' + this.getHash()).then(\r\n            (response) => {\r\n                console.log(response.data);\r\n                this.setState({\r\n                    book: response.data\r\n                }) ;  \r\n            }\r\n        );\r\n    }\r\n\r\n    //tells the database to add a view to the book\r\n    bookView = ()=>{\r\n        axios.post('http://localhost:8080/addView?id=' + this.state.book.bookId).then(\r\n            (response) => {\r\n                console.log(response.data);\r\n            }\r\n        );\r\n    }\r\n\r\n    //toggles the addReview state variable, which determines whether or not to show\r\n    //the add review form\r\n    toggleReview = () => {\r\n        if(this.props.user.authenticated){\r\n        this.setState(\r\n            {addReview: !this.state.addReview}\r\n        );\r\n        }\r\n    }\r\n\r\n    //gets the bookId from the hash in the url, uses this to \r\n    //get the book from the database\r\n    getHash = () => {\r\n        let hash = null;\r\n        hash = this.props.item.location.hash.substring(1);\r\n        return hash;\r\n    }\r\n\r\n    //increments the value in the cart using the state variable\r\n    incrementQuantity = () => {\r\n        let inc = this.state.quantity + 1;\r\n        this.setState(\r\n            {\r\n                quantity: inc\r\n            }\r\n        );\r\n    }\r\n\r\n    //decrements the Add to cart quantity if it is > 0\r\n    decrementQuantity = () => {\r\n        if(this.state.quantity === 0) return;\r\n        let inc = this.state.quantity - 1;\r\n        this.setState(\r\n            {\r\n                quantity: inc\r\n            }\r\n        );\r\n    }\r\n\r\n    //sets the reviewText value in the state from the review input\r\n    changeReviewText = (event)=> {\r\n        this.setState({\r\n            review: {\r\n              rating: this.state.review.rating,\r\n              reviewText: event.target.value\r\n            }\r\n          }\r\n          );\r\n    }\r\n\r\n    //sets the rating value in the state from the rating input\r\n    changeRating = (event)=> {\r\n        console.log(event.target.value > 5);\r\n        if(event.target.value > 5) {\r\n            event.target.value=5;\r\n            return;\r\n        }\r\n        this.setState({\r\n            review: {\r\n              rating: event.target.value,\r\n              reviewText: this.state.review.reviewText\r\n            }\r\n          }\r\n          );\r\n    }\r\n\r\n    //submits the users review for the book\r\n    submitReview = () => {\r\n        const headers = {\r\n            'usernameSubmitted': this.props.user.username,\r\n            'Authorization':this.props.user.token\r\n          }\r\n        const body = {\r\n            bookId: this.state.book.bookId,\r\n            username: this.props.user.username,\r\n            review: this.state.review\r\n        }\r\n        axios.post('http://localhost:8080/addReview',body, {headers:headers}).then(\r\n            (response) => {\r\n                console.log(response);\r\n                this.updateBook();\r\n                this.toggleReview();\r\n            }\r\n        ).catch(\r\n            (err) => {\r\n                console.log('username was modified!');\r\n                console.log(err);\r\n            }\r\n        );\r\n        ;\r\n    }\r\n\r\n    //gets the div with all the review values from the state\r\n    getReviews = () => {\r\n        let reviews = [];\r\n        this.state.book.reviews.forEach(\r\n            (review) => {\r\n                reviews.push(\r\n                    <div\r\n                    style={{\r\n                        backgroundColor:\"#fff8dc\",\r\n                        border: \"2px solid black\",\r\n                        borderRadius: \"3%\",\r\n                        marginLeft: \"20%\",\r\n                        marginRight: \"20%\",\r\n                        marginBottom: \"1%\",\r\n                        marginTop: \"1%\",\r\n                        padding:\"1%\",\r\n                        boxShadow: \"5px 5px grey\"\r\n                        }}>\r\n                 <h3 style={{textDecorationLine: \"underline\"}}>{review.user.username}</h3> \r\n                 <h5>{review.rating}/5</h5>\r\n                 <p style=\r\n                     {{fontFamily: \"monospace\",\r\n                        fontStyle:\"italic\"\r\n                    }}\r\n                    >{review.reviewText}</p>\r\n                </div>\r\n                );\r\n            }\r\n        );\r\n        return reviews;\r\n    }\r\n\r\n    render(){\r\n\r\n        let revs = null;\r\n\r\n        if(this.state.addReview === true){\r\n            revs = (\r\n                <div>\r\n                    <label style={{textDecorationLine:\"underline\"}}>Rating</label><br></br>\r\n                    <input style={{width:\"35px\", textAlign:'center'}} type=\"number\" min=\"1\" max=\"5\" onChange={this.changeRating}/><br></br>\r\n                    <label style={{textDecorationLine:\"underline\"}}>Review</label><br></br>\r\n                    <textarea style={{width:\"80%\", height:'70px', textAlign:'center'}} onChange={this.changeReviewText}/><br></br>\r\n                    <button onClick={this.submitReview}>Submit Review</button>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        let loginMessage = null;\r\n\r\n        console.log(this.state.user);\r\n\r\n        if(!this.props.user.authenticated){\r\n            loginMessage = (\r\n                <small style={{color:\"red\", fontStyle:'italic'}}>must login to add review</small>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"BuyBook\"\r\n            style={{\r\n                backgroundColor:\"#fff8dc\",\r\n                border: \"2px solid black\",\r\n                borderRadius: \"3%\",\r\n                marginLeft: \"20%\",\r\n                marginRight: \"20%\",\r\n                marginBottom: \"1%\",\r\n                marginTop: \"1%\",\r\n                padding:\"1%\",\r\n                boxShadow: \"10px 10px grey\"\r\n                }}\r\n            >\r\n\r\n            <img alt=\"\" src={this.state.book.image} style={{\r\n            borderRadius: \"10%\",\r\n            boxShadow: \"3px 3px grey\"}}></img>\r\n        <div\r\n            style={{\r\n                border: \"2px solid black\",\r\n                borderRadius: \"15%\",\r\n                marginLeft: \"20%\",\r\n                marginRight: \"20%\",\r\n                marginBottom: \"1%\",\r\n                marginTop: \"1%\",\r\n                padding:\"1%\",\r\n                fontFamily:\"cursive\",\r\n                backgroundColor:\"white\"\r\n            }}> <div>{this.state.book.title} </div><br></br>\r\n            <div><small>by: {this.state.book.author} </small></div><br></br>\r\n        <div><label>Price:</label> ${this.state.book.price.toFixed(2)} </div>\r\n        </div>\r\n        <div><button onClick={this.incrementQuantity}>+</button><p>{this.state.quantity}</p><button onClick={this.decrementQuantity}>-</button>  <br></br>\r\n        <button onClick={() => this.props.atc(this.state.book,this.state.quantity, this.state.user.username)}>Add to Cart</button>\r\n        </div>\r\n        {this.getReviews()}\r\n        \r\n        <div><button onClick={this.toggleReview}>Add Review</button></div>\r\n        {loginMessage}\r\n        {revs}\r\n        </div>\r\n        );\r\n    }\r\n}\r\nexport default BuyBook;\r\n\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n//Analytics component, only accessible if the user is ROLE_ADMIN\r\nclass Analytics extends Component {\r\n\r\n    //initialize state\r\n    state = {\r\n        userTotalSpent: null,\r\n        userTotalSpentOnBooks:null,\r\n        salesIntervalId: null,\r\n        viewsIntervalId: null,\r\n        monthlyStats: null,\r\n        topSales: null,\r\n        topViews: null\r\n    };\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n    }\r\n\r\n    //instantly call to get the monthly stats, books with most views and most sales\r\n    //topViews and TopSales is on a set interveal every 15 seconds, it calls to \r\n    //the database again to get the updated values\r\n    componentDidMount = () => {\r\n       this.getUserTotalSpent()\r\n       this.getUserTotalSpentOnBooks()\r\n        this.getMonthlyStats();\r\n        this.getTopViews();\r\n        this.startTopViewsListener();\r\n        this.getTopSales();\r\n        this.startTopSalesListener();\r\n    }\r\n    //before destroying the component, clear both intervals\r\n    componentWillUnmount = () => {\r\n        this.stopTopSalesListener();\r\n        this.stopTopViewsListener();\r\n        return true;\r\n    }\r\n\r\n    //gets the amount each user has spent in total\r\n    getUserTotalSpent = () => {\r\n        const headers = {\r\n            'Authorization': this.props.user.token\r\n          }\r\n        axios.get('http://localhost:8080/userTotalSpent', {headers: headers}).then(\r\n            response => {\r\n                this.setState({\r\n                    userTotalSpent: response.data\r\n                });\r\n            }\r\n        );   \r\n    }\r\n\r\n    //gets the total amount each user has spent on each book\r\n    getUserTotalSpentOnBooks = () => {\r\n        const headers = {\r\n            'Authorization': this.props.user.token\r\n          }\r\n        axios.get('http://localhost:8080/userTotalSpentOnBooks', {headers: headers}).then(\r\n            response => {\r\n                this.setState({\r\n                    userTotalSpentOnBooks: response.data\r\n                });\r\n            }\r\n        );   \r\n    }\r\n\r\n    //gets the books sold for each month\r\n    getMonthlyStats = () => {\r\n        const headers = {\r\n            'Authorization': this.props.user.token\r\n          }\r\n        axios.get('http://localhost:8080/monthlyStats', {headers: headers}).then(\r\n            response => {\r\n                this.setState({\r\n                    monthlyStats: response.data\r\n                });\r\n            }\r\n        );   \r\n    }\r\n    //starts the interval\r\n    startTopViewsListener = () => {\r\n        console.log(\"IN START VIEWS\");\r\n        let id ;\r\n        this.setState({viewsIntervalId: setInterval(this.getTopViews, 15000)});\r\n    }\r\n    //stops the interval\r\n    stopTopViewsListener = () => {\r\n        console.log(\"IN STOP VIEWS\");\r\n        clearInterval(this.state.viewsIntervalId);\r\n    }\r\n    //gets the top 10 most viewed books \r\n    getTopViews = () => {\r\n        console.log('in getTopVIEWs');\r\n        const headers = {\r\n            'Authorization': this.props.user.token\r\n          }\r\n        axios.get('http://localhost:8080/topViews', {headers: headers}).then(\r\n            response => {\r\n                this.setState({\r\n                    topViews: response.data\r\n                });\r\n            }\r\n        );\r\n        \r\n    }\r\n\r\n    //starts the interval\r\n    startTopSalesListener = () => {\r\n        console.log(\"IN START SALES\");\r\n        let id;\r\n        this.setState({salesIntervalId: setInterval(this.getTopSales, 15000)});\r\n    }\r\n\r\n    //stops the interval\r\n    stopTopSalesListener = () => {\r\n        console.log(\"IN STOP SALES\");\r\n        clearInterval(this.state.salesIntervalId);\r\n    }\r\n\r\n    //gets the books with the most sales\r\n    getTopSales = () => {\r\n        console.log('in getTopSales');\r\n        const headers = {\r\n            'Authorization': this.props.user.token\r\n          }\r\n        axios.get('http://localhost:8080/topSales',{headers: headers}).then(\r\n            response => {\r\n                this.setState({\r\n                    topSales: response.data\r\n                });\r\n            }\r\n        );\r\n \r\n    }\r\n\r\n    render() {\r\n      \r\n        let userSpent = [];\r\n\r\n        if(this.state.userTotalSpent != null){\r\n\r\n        userSpent= this.state.userTotalSpent.map(\r\n            item =>\r\n                    (<tr><td>{item.username}</td><td>{item.itemsBought}</td><td>{item.postalCode}</td><td>${item.spent.toFixed(2)}</td></tr>)\r\n                \r\n            \r\n        );\r\n        }\r\n\r\n    \r\n        let userSpentOnBooks = [];\r\n\r\n        if(this.state.userTotalSpentOnBooks != null){\r\n\r\n        userSpentOnBooks = this.state.userTotalSpentOnBooks.map(\r\n            item =>\r\n                    (<tr><td>{item.username}</td><td>{item.title}</td><td>{item.author}</td><td>${item.price.toFixed(2)}</td><td>{item.quantity}</td><td>{item.postalCode}</td><td>${item.spent.toFixed(2)}</td></tr>)\r\n                \r\n            \r\n        );\r\n    }\r\n \r\n       \r\n        let monthlyBooks = [];\r\n\r\n        if(this.state.monthlyStats != null){\r\n\r\n        monthlyBooks = this.state.monthlyStats.map(\r\n            book =>\r\n                    (<tr><td>{book.bookSold}</td><td>{book.title}</td><td>{book.month}</td></tr>)\r\n                \r\n            \r\n        );\r\n    }\r\n\r\n    let topViews = [];\r\n\r\n\r\n        if(this.state.topViews != null){\r\n            topViews = this.state.topViews.map(\r\n                book =>\r\n                        (<tr><td>{book.userViews}</td><td>{book.title}</td></tr>)\r\n            );\r\n        }\r\n\r\n        let topSales = [];\r\n\r\n\r\n        if(this.state.topSales != null){\r\n            topSales = this.state.topSales.map(\r\n                book =>\r\n                        (<tr><td>{book.booksSold}</td><td>{book.title}</td></tr>)\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"Analytics\">\r\n                <div style= {{marginLeft:\"20%\", marginRight:\"20%\",width:\"60%\", textAlign:\"center\"}}>\r\n                 <h2>Top Sales (Live)</h2>\r\n                 <table style= {{border:\"2px solid black\", width:\"100%\"}}>\r\n                 {topSales}\r\n                 </table>\r\n                 </div>\r\n\r\n                 <div style= {{marginLeft:\"20%\", marginRight:\"20%\",width:\"60%\", textAlign:\"center\"}}>\r\n                 <h2>Top Views (Live)</h2>\r\n                 <table style= {{border:\"2px solid black\", width:\"100%\"}}>\r\n                 {topViews}\r\n                 </table>\r\n                 </div>\r\n                <div style= {{marginLeft:\"20%\", marginRight:\"20%\",width:\"60%\", textAlign:\"center\"}}>\r\n                <h2>Books Sold by Month</h2>\r\n                 <table style= {{border:\"2px solid black\", width:\"100%\"}}>\r\n                 <tr><th>Books Sold</th><th>Title</th><th>Month</th></tr>\r\n                    {monthlyBooks}\r\n                 </table>\r\n                 </div>\r\n                 <div style= {{marginLeft:\"20%\", marginRight:\"20%\",width:\"60%\", textAlign:\"center\"}}>\r\n                <h2>Total Each User Has Spent on Each Book</h2>\r\n                 <table style= {{border:\"2px solid black\", width:\"100%\"}}>\r\n                 <tr><th>Username</th><th>Title</th><th>Author</th><th>Price</th><th>Quantity</th><th>Postal Code</th><th>Total Spent</th></tr>\r\n                    {userSpentOnBooks}\r\n                 </table>\r\n                 </div>\r\n                 <div style= {{marginLeft:\"20%\", marginRight:\"20%\",width:\"60%\", textAlign:\"center\"}}>\r\n                <h2>Total Each User Has Spent in Total</h2>\r\n                 <table style= {{border:\"2px solid black\", width:\"100%\"}}>\r\n                 <tr><th>Username</th><th>Total Items Bought</th><th>Postal Code</th><th>Total Spent</th></tr>\r\n                    {userSpent}\r\n                 </table>\r\n                 </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Analytics;\r\n\r\n","import { React, Component} from 'react';\r\nimport {Route, Link} from 'react-router-dom';\r\nimport Genre from '../Genre/Genre';\r\nimport BuyBook from '../Genre/BuyBook/BuyBook';\r\nimport Analytics from '../Analytics/Analytics';\r\n\r\n\r\nclass Browse extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        //state defines the subjects, or the name of the links the\r\n        //user can use to find a book, either by browsing a category\r\n        //or by searching a title \r\n        this.state = {\r\n            subjects: ['Search', 'History', 'Fiction', 'Science']\r\n        }\r\n    }\r\n    \r\n\r\n    render(){\r\n        let todo = null;\r\n\r\n        //maps all the subjects to links that the router handles\r\n           todo = this.state.subjects.map(sub => \r\n                (<Link to={\"/\"+ sub}>\r\n                <div\r\n                style={{\r\n                    backgroundColor:\"#fff8dc\",\r\n                    border: \"2px solid black\",\r\n                    borderRadius: \"3%\",\r\n                    marginLeft: \"20%\",\r\n                    marginRight: \"20%\",\r\n                    marginBottom: \"1%\",\r\n                    marginTop: \"3%\",\r\n                    padding:\"1%\",\r\n\r\n                    }}\r\n                ><h4>{sub}</h4></div>\r\n                </Link>\r\n                )\r\n        );\r\n\r\n        let analytics = null;\r\n        //check the user role, if the user role is Admin, show a \"Run Analytics button\"\r\n        //this button shows analytics such as: \r\n                                          //(top ten most sold books),\r\n                                          //(top ten most viewed books)\r\n                                          //(books sold each month)\r\n        if(this.props.user.role == \"ROLE_ADMIN\"){\r\n            analytics = (\r\n                <Link to=\"analytics\">\r\n                <div\r\n                style={{\r\n                    backgroundColor:\"#fff8dc\",\r\n                    border: \"2px solid black\",\r\n                    borderRadius: \"3%\",\r\n                    marginLeft: \"20%\",\r\n                    marginRight: \"20%\",\r\n                    marginBottom: \"1%\",\r\n                    marginTop: \"3%\",\r\n                    padding:\"1%\",\r\n\r\n                    }}\r\n                ><h4>Analytics</h4></div>\r\n                </Link>\r\n            );\r\n        }\r\n        let partnerLink = null;\r\n\r\n        if(this.props.user.role === \"ROLE_PARTNER\"){\r\n            partnerLink = (<a href=\"http://localhost:8080/getAllBooks\">Business Partner Link</a>);\r\n        }\r\n        return (\r\n            <div className=\"Browse\">\r\n                <h4>Browse Books {this.props.user.username}</h4>\r\n            {partnerLink}\r\n            {analytics}\r\n            {todo}\r\n            {/* <Route path=\"/analytics\" render={(props) => <Analytics user={this.props.user}/>}/>\r\n            <Route path=\"/search\" render={(props) => <Genre sub=\"search\" />}/>\r\n            <Route path=\"/history\" render={(props) => <Genre sub=\"history\"/>}/>\r\n            <Route path=\"/fiction\" render={(props) => <Genre sub=\"fiction\"/>}/>\r\n            <Route path=\"/science\" render={(props) => <Genre sub=\"science\"/>}/>\r\n            <Route path=\"/book\" render={(props) => <BuyBook item={props} cart={this.props.cart} atc={this.props.atc} user={this.props.user}/>}/> */}\r\n            </div> \r\n        );\r\n    }\r\n}\r\nexport default Browse;","import React, { Component } from 'react';\nimport './App.css';\nimport Login from './Login/Login';\nimport Register from './Register/Register';\nimport Browse from './Browse/Browse';\nimport Genre from './Genre/Genre';\nimport BuyBook from './Genre/BuyBook/BuyBook';\nimport Analytics from './Analytics/Analytics';\nimport axios from 'axios';\nimport {BrowserRouter, Route, Link} from 'react-router-dom';\n\n\nclass App extends Component {\n//initialize state\n  state = {\n    cart: [],\n    user: {\n      username: null,\n      password: null\n    },\n    authuser: {\n      authenticated: false,\n      username: null,\n      token: null,\n      tokenExpires: null,\n      role: null\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    //see if there is an authenticated user in the local storage\n    const jsonString = localStorage.getItem('authuser');\n    console.log(jsonString);\n    //if there is a user check to see if its token has expired or not\n    if (jsonString != null) {\n      const authuser = JSON.parse(jsonString);\n      console.log(authuser);\n      const today = new Date();\n      const tokenDate = authuser.tokenExpires;\n      const dates = tokenDate.split('-');\n      //token date\n      const tdate = new Date(parseInt(dates[0]), parseInt(dates[1]) - 1, parseInt(dates[2]));\n      //boolean value, return true if token date is valid\n      const isNotExpiredToken = (today.getFullYear() <= tdate.getFullYear())\n        && (today.getMonth() <= tdate.getMonth())\n        && (today.getDate() < tdate.getDate());\n        //if there is a token that is still valid, update the state to add the local storage auth user values\n      if (isNotExpiredToken) {\n        this.state = {\n          cart: [],\n          login: true,\n          user: {\n            username: authuser.username,\n            password: null\n          },\n          authuser: {\n            authenticated: authuser.authenticated,\n            username: authuser.username,\n            token: authuser.token,\n            tokenExpires: authuser.tokenExpires,\n            role: authuser.role\n          }\n        };\n        \n      }\n    }\n  }\n\n  //clears password in state after logging in for security reasons \n  clearPassword = () => {\n    this.setState({\n      user: {\n        username: this.state.user.username,\n        password: null\n      }\n    }\n    );\n  }\n// gets the value of the username form the login component username input, and sets it to the state\n  usernameChangeHandler = (event) => {\n    this.setState({\n      user: {\n        username: event.target.value,\n        password: this.state.user.password\n      }\n    }\n    );\n\n  }\n// gets the value of the password form the login component password input, and sets it to the state\n  passwordChangeHandler = (event) => {\n    this.setState({\n      user: {\n        username: this.state.user.username,\n        password: event.target.value\n      }\n    }\n    );\n\n  }\n\n\n  //used in the Home component to log a user out. removes the local storage variable and resets the state\n  logout = () => {\n    localStorage.removeItem(\"authuser\");\n\n    this.setState(\n      {\n        user: {\n          username: null,\n        },\n        authuser: {\n          authenticated: false,\n          username: null,\n          token: null,\n          tokenExpires: null\n        } \n      }\n    )\n  }\n//used in the login component, logs the user in\n  login = () => {\n    console.log('clicked login');\n    const headers = {\n      'username': this.state.user.username,\n      'password': this.state.user.password\n    }\n    axios.post('http://localhost:8080/login', null,\n      {\n        headers: headers\n      }\n    ).then(\n      //if successful login, update the state and the local storage\n      response => {\n        console.log(response);\n        //remove the password since we use JWT for Authorization\n        this.clearPassword();\n        this.setState(\n          {\n            authuser: {\n              authenticated: true,\n              username: this.state.user.username,\n              token: response.headers.authorization,\n              tokenExpires: response.headers.expires,\n              role: response.headers.role\n            }\n          }\n        );\n        localStorage.setItem(\"authuser\", JSON.stringify(this.state.authuser));\n      }\n    )\n    .catch(\n      //catch any errors in the request\n      err => {\n        console.log(err);\n      }\n    )\n      ;\n  }\n\n  //function for adding to cart in the BuyBook Component\n  //changes the cart value in this state \n  //gets the complete book object and the quantity to order\n  addToCart = (book, quantity, username) =>{\n    let newCart = [];\n    let i;\n    //if book is  already in cart,\n    // this will be the index of the book in the array\n    let pos = -1;\n\n    for(i=0;i<this.state.cart.length; i++){\n      newCart.push(this.state.cart[i]);\n      console.log(this.state.cart[i].book.bookId);\n      console.log(book.bookId);\n      console.log(this.state.cart[i].book.bookId === book.bookId);\n      if((this.state.cart[i].book.bookId === book.bookId)\n       && (pos < 0)){\n          pos = i;\n          console.log(pos);\n      }\n    }\n    //if item is already in array just update its quantity value\n    if(pos>=0){\n      newCart[pos].quantity = newCart[pos].quantity + quantity;\n    }\n    //otherwise add the book as a new item in the cart\n    else{\n      newCart.push({book:book, quantity:quantity, username: username});\n    }\n    this.setState(\n      {cart: newCart}\n    );\n    console.log('cart books:');\n    console.log(this.state.cart);\n  }\n\n  render() {\n\n    \n\n    let loginPath = \"/login\";\n    let loginComponent = (<Login click={this.login} changeuser={this.usernameChangeHandler} changepass={this.passwordChangeHandler} />);\n    let registerPath = \"/register\";\n    let registerComponent = (<Register />);\n\n    if(this.state.authuser.authenticated === true){\n      loginComponent=(<Browse user={this.state.authuser} cart={this.state.cart} atc={this.addToCart}  click={this.logout} />);\n      registerComponent=(<Browse user={this.state.authuser} cart={this.state.cart} atc={this.addToCart}  click={this.logout} />);\n\n    }\n\n    //this determines what component to output, a router will likely replace this code\n    let todo = null;\n    let logoutLink = null;\n    let loginLink = (\n        <Link style={{margin:\"2px\"}} to=\"/login\">\n            Login\n          </Link>\n    );\n    let registerLink = (\n      <Link style={{margin:\"2px\"}} to=\"/register\">\n          Register\n        </Link>\n  );\n    //if the user is logged in already then go to Browse component, otherwise goes to Login\n    // or Register component, depending on the 'login' value in the state\n    todo = (\n      <Link style={{margin:\"2px\"}} to=\"\">\n        Browse\n      </Link>\n      );\n    if (this.state.authuser.authenticated) {\n\n        logoutLink = (\n          <Link to=\"\" style={{margin:\"2px\"}} onClick={this.logout}>\n            Logout\n          </Link>\n          );\n\n          loginLink = null;\n          registerLink= null;\n    }\n    // else if (this.state.login) {\n    //   todo = (\n    //   <div>\n    //   <Login click={this.login} changeuser={this.usernameChangeHandler} changepass={this.passwordChangeHandler} />\n    //   <button onClick={this.toggleLogin}>Switch</button>\n    //   </div>\n    //   );\n    // }\n    // else {\n    //   todo = (<div>\n    //       <Register click={this.toggleLogin}/>\n    //       <button onClick={this.toggleLogin}>Switch</button>\n    //   </div>\n    //     );\n    // }\n    //return the todo variable into the render. its value is based on the conditionals above\n    return (\n      <BrowserRouter>\n      <div style={{marginBottom:\"10%\"}} className=\"App\">\n        <h1>The Book Club</h1>\n            {todo} {logoutLink}{loginLink}{registerLink}\n        \n\n            <Route path={registerPath} render={(props) => registerComponent}/>\n            <Route path={loginPath} render={(props) => loginComponent}/>\n            <Route path=\"/\" exact render={(props) => <Browse user={this.state.authuser} cart={this.state.cart} atc={this.addToCart}  click={this.logout} />}/>\n            <Route path=\"/browse\" render={(props) => <Browse user={this.state.authuser} cart={this.state.cart} atc={this.addToCart}  click={this.logout} />}/>\n            <Route path=\"/analytics\" render={(props) => <Analytics user={this.state.authuser}/>}/>\n            <Route path=\"/search\" render={(props) => <Genre sub=\"search\" />}/>\n            <Route path=\"/history\" render={(props) => <Genre sub=\"history\"/>}/>\n            <Route path=\"/fiction\" render={(props) => <Genre sub=\"fiction\"/>}/>\n            <Route path=\"/science\" render={(props) => <Genre sub=\"science\"/>}/>\n            <Route path=\"/book\" render={(props) => <BuyBook item={props} cart={this.state.cart} atc={this.addToCart} user={this.state.authuser}/>}/>\n      </div>\n      </BrowserRouter>\n\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}